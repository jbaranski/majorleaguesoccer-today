name: send_daily_email

on:
  schedule:
    # Runs at 5:30 AM EDT (9:30 UTC) every day
    - cron: "30 9 * * *"
  workflow_dispatch: # Allow manual triggering

jobs:
  send-email:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # Required for OIDC
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: MLS-Today-SendEmail-GithubAction
          retry-max-attempts: 1

      - name: Send daily email to subscribers
        run: |
          set -euo pipefail

          # Load subscriber list from secret
          SUBSCRIBERS='${{ secrets.SUBSCRIBER_LIST }}'

          # Email content
          SUBJECT="Major League Soccer Today - $(date +'%A, %B %d, %Y')"

          # Send individual emails to each subscriber
          echo "$SUBSCRIBERS" | jq -r '.[]' | while read -r email; do
            echo "Sending to subscriber (email hidden for privacy)"

            # Create message content using jq to handle HTML properly
            HTML_CONTENT="$(cat index.html | jq -Rs .)"
            jq -n \
              --arg subject "$SUBJECT" \
              --argjson html "$HTML_CONTENT" \
              '{
                Simple: {
                  Subject: { Data: $subject },
                  Body: { Html: { Data: $html } }
                }
              }' > /tmp/message.json

            if aws sesv2 send-email \
              --from-email-address "${{ secrets.FROM_EMAIL }}" \
              --destination "ToAddresses=$email" \
              --content file:///tmp/message.json > /dev/null 2>&1; then
              echo "✓ Email sent successfully"
            else
              echo "✗ Failed to send email"
              exit 1
            fi

            rm -f /tmp/message.json
          done

          echo "All emails sent successfully"

